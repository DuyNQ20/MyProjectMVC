// <auto-generated />
using System;
using CatalogService.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MyProjectMVC.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MyProject.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<bool>("Delected");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductId");

                    b.Property<string>("content");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 873, DateTimeKind.Unspecified).AddTicks(9703), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Delected = true,
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 873, DateTimeKind.Unspecified).AddTicks(9716), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            ProductId = 1,
                            content = "Nội dung bình luận 1 cho iphone"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 873, DateTimeKind.Unspecified).AddTicks(9746), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Delected = false,
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 873, DateTimeKind.Unspecified).AddTicks(9746), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            ProductId = 1,
                            content = "Nội dung bình luận 2 cho iphone"
                        });
                });

            modelBuilder.Entity("MyProject.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Extention");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int>("ProductId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 874, DateTimeKind.Unspecified).AddTicks(3723), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Extention = ".png",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 874, DateTimeKind.Unspecified).AddTicks(3736), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "iphonex",
                            ProductId = 1,
                            Url = "images/smartphone/iphonex.jpg"
                        });
                });

            modelBuilder.Entity("MyProject.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Info");

                    b.Property<string>("Logo");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 867, DateTimeKind.Unspecified).AddTicks(5720), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Info = "Thông tin apple",
                            Logo = "Logo Apple",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 870, DateTimeKind.Unspecified).AddTicks(9281), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 871, DateTimeKind.Unspecified).AddTicks(1086), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Info = "Thông tin samsung",
                            Logo = "Logo Samsung",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 871, DateTimeKind.Unspecified).AddTicks(1103), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Samsung"
                        });
                });

            modelBuilder.Entity("MyProject.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Decriptions");

                    b.Property<bool>("Deleted");

                    b.Property<int>("Inventory");

                    b.Property<bool>("IsNew");

                    b.Property<int>("ManufacturerId");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<decimal>("OriginalPrice");

                    b.Property<int>("ProductCategoryId");

                    b.Property<decimal>("SalePrice");

                    b.Property<string>("Specifications");

                    b.Property<int>("StatusId");

                    b.Property<int>("VendorId");

                    b.Property<int>("View");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("StatusId");

                    b.HasIndex("VendorId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 873, DateTimeKind.Unspecified).AddTicks(5102), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Decriptions = "Cuối cùng iPhone X cũng đã ra mắt trong sự kiện diễn ra rạng sáng nay (13/9) theo giờ Việt Nam. </br>Đây là sản phẩm được Apple tung ra để kỷ niệm 10 năm iPhone.",
                            Deleted = false,
                            Inventory = 1000,
                            IsNew = true,
                            ManufacturerId = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 873, DateTimeKind.Unspecified).AddTicks(5111), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "IPhone X",
                            OriginalPrice = 20000000m,
                            ProductCategoryId = 1,
                            SalePrice = 25000000m,
                            Specifications = "Nhà sản xuất:Apple </br>Hệ điều hành: iOS 11 </br>Kích thước:	143,6 x 70,9 x 7,7 mm </br>Trọng lượng: 174g </br>Ngày giới thiệu:	13 / 09 / 2017",
                            StatusId = 1,
                            VendorId = 1,
                            View = 500
                        });
                });

            modelBuilder.Entity("MyProject.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 872, DateTimeKind.Unspecified).AddTicks(3201), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 872, DateTimeKind.Unspecified).AddTicks(3209), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Xuất bản"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 872, DateTimeKind.Unspecified).AddTicks(3231), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 872, DateTimeKind.Unspecified).AddTicks(3231), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Chưa xuất bản"
                        });
                });

            modelBuilder.Entity("MyProject.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Địa chỉ apple",
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 871, DateTimeKind.Unspecified).AddTicks(8330), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Email = "apple@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 871, DateTimeKind.Unspecified).AddTicks(8339), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Apple",
                            Phone = "0987654321"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Địa chỉ samsung",
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 871, DateTimeKind.Unspecified).AddTicks(8373), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Email = "samsung@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 871, DateTimeKind.Unspecified).AddTicks(8373), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Samsung",
                            Phone = "0123456789"
                        });
                });

            modelBuilder.Entity("MyProjectMVC.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 872, DateTimeKind.Unspecified).AddTicks(785), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 872, DateTimeKind.Unspecified).AddTicks(798), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "IPhone"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 872, DateTimeKind.Unspecified).AddTicks(832), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 872, DateTimeKind.Unspecified).AddTicks(836), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 872, DateTimeKind.Unspecified).AddTicks(840), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 2, 19, 11, 20, 23, 872, DateTimeKind.Unspecified).AddTicks(845), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Oppo"
                        });
                });

            modelBuilder.Entity("MyProject.Models.Comment", b =>
                {
                    b.HasOne("MyProject.Models.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyProject.Models.Image", b =>
                {
                    b.HasOne("MyProject.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyProject.Models.Product", b =>
                {
                    b.HasOne("MyProject.Models.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyProjectMVC.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyProject.Models.Status", "Status")
                        .WithMany("Products")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyProject.Models.Vendor", "Vendor")
                        .WithMany("Products")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
